{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://D%3A/New%20folder/app/models/Products.js"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst ProductSchema = new mongoose.Schema({\n  name: { type: String, required: true },\n  category: { type: String, required: true },\n  febricCategory: { type: String, required: true },\n  price: { type: Number, required: true },\n  size: { type: String, required: true },\n  images: { type: [String]},\n  quantity: { type: Number,required: true },\n  description: { type: String }\n});\n\n// âœ… Always use the same name (\"Product\") to avoid OverwriteModelError\nconst Product = mongoose.models.Product || mongoose.model('Products', ProductSchema);\n\nexport default Product;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,gBAAgB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACxC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,gBAAgB;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC/C,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,QAAQ;QAAE,MAAM;YAAC;SAAO;IAAA;IACxB,UAAU;QAAE,MAAM;QAAO,UAAU;IAAK;IACxC,aAAa;QAAE,MAAM;IAAO;AAC9B;AAEA,sEAAsE;AACtE,MAAM,UAAU,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,YAAY;uCAEvD"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://D%3A/New%20folder/lib/mongodb.js"],"sourcesContent":["// lib/mongoose.js\n\nimport mongoose from 'mongoose';\n\nconst MONGODB_URI = \"mongodb://localhost:27017/lebel\"; // hardcoded for local DB\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI');\n}\n\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connect() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  if (!cached.promise) {\n    const opts = {\n      bufferCommands: false,\n    };\n\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\n      return mongoose;\n    });\n  }\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n\nexport default connect;\n"],"names":[],"mappings":"AAAA,kBAAkB;;;;AAElB;;AAEA,MAAM,cAAc,mCAAmC,yBAAyB;AAEhF,uCAAkB;;AAElB;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,MAAM,IAAI,CAAC,CAAC;YACzD,OAAO;QACT;IACF;IACA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file://D%3A/New%20folder/app/api/products/route.js"],"sourcesContent":["// app/api/products/route.js\n\nimport { NextResponse } from \"next/server\";\nimport Product from \"@/app/models/Products\";\nimport connect from \"@/lib/mongodb\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { log } from \"console\";\n\n// Helper to save uploaded file\nasync function saveFile(file) {\n  if (!file) return null;\n  const bytes = Buffer.from(await file.arrayBuffer());\n  const fileName = Date.now() + \"-\" + file.name;\n  const uploadDir = path.join(process.cwd(), \"public/uploads\");\n\n  if (!fs.existsSync(uploadDir)) {\n    fs.mkdirSync(uploadDir, { recursive: true });\n  }\n\n  fs.writeFileSync(path.join(uploadDir, fileName), bytes);\n  return fileName;\n}\n\n// -------------------- ADD / UPDATE PRODUCT --------------------\nexport async function POST(req) {\n  try {\n    await connect();\n    \n    // ðŸ‘‡ Otherwise â†’ normal add product\n    const formData = await req.formData();\n\n    const imageFiles = formData.getAll(\"images\");\nconsole.log(\"====== Received Files ======\", imageFiles);\n\n// ðŸ‘‡ await Promise.all directly instead of wrapping in async/await in map\nconst savedImages = await Promise.all(\n  imageFiles.map(file => saveFile(file))\n);\n\n   \n    const product = new Product({\n      name: formData.get(\"name\"),\n      category: formData.get(\"category\"),\n      febricCategory: formData.get(\"febricCategory\"),\n      price: formData.get(\"price\"),\n      size: formData.get(\"size\"),\n      description: formData.get(\"description\"),\n      quantity: formData.get(\"quantity\"),\n      color: formData.get(\"color\"),\n     images: savedImages,\n    });\n\n    await product.save();\n    return NextResponse.json({ msg: \"Added successfully\" ,success:true}, { status: 201 });\n  } catch (error) {\n    console.error(\"Error:\", error);\n    return NextResponse.json({ error: \"Failed\" }, { status: 500 });\n  }\n}\n\n// -------------------- GET PRODUCTS --------------------\nexport async function GET() {\n  try {\n    await connect();\n    console.log(\"i am here\")\n    const products = await Product.find();\n    return NextResponse.json({success:true,\n      data: products }, { status: 200 });\n  } catch (error) {\n    console.error(\"Error:\", error);\n    return NextResponse.json({ error: \"Database error\" }, { status: 500 });\n  }\n}\n\n\n\n// helper function to remove file\nfunction removeFile(fileName) {\n  if (!fileName) return;\n  const filePath = path.join(process.cwd(), \"public/uploads\", fileName);\n  if (fs.existsSync(filePath)) {\n    fs.unlinkSync(filePath);\n  }\n}\n\nexport async function DELETE(req) {\n  try {\n    await connect();\n    const { searchParams } = new URL(req.url);\n    const id = searchParams.get(\"id\"); // get id from query ?id=123\n\n    if (!id) {\n      return NextResponse.json({ error: \"Product ID is required\" }, { status: 400 });\n    }\n\n    const product = await Product.findById(id);\n    if (!product) {\n      return NextResponse.json({ error: \"Product not found\" }, { status: 404 });\n    }\n\n    // remove images from folder\n    removeFile(product.image1);\n    removeFile(product.image2);\n\n    // delete product from DB\n    await Product.findByIdAndDelete(id);\n\n    return NextResponse.json({ msg: \"Product deleted successfully\" }, { status: 200 });\n  } catch (error) {\n    console.error(\"Error deleting product:\", error);\n    return NextResponse.json({ error: \"Delete failed\" }, { status: 500 });\n  }\n}\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}