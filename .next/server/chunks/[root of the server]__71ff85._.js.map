{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://D%3A/New%20folder/lib/mongodb.js"],"sourcesContent":["// lib/mongoose.js\n\nimport mongoose from 'mongoose';\n\nconst MONGODB_URI = \"mongodb://localhost:27017/lebel\"; // hardcoded for local DB\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI');\n}\n\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connect() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  if (!cached.promise) {\n    const opts = {\n      bufferCommands: false,\n    };\n\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\n      return mongoose;\n    });\n  }\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n\nexport default connect;\n"],"names":[],"mappings":"AAAA,kBAAkB;;;;AAElB;;AAEA,MAAM,cAAc,mCAAmC,yBAAyB;AAEhF,uCAAkB;;AAElB;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,MAAM,IAAI,CAAC,CAAC;YACzD,OAAO;QACT;IACF;IACA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file://D%3A/New%20folder/app/models/Products.js"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst ProductSchema = new mongoose.Schema({\n  name: { type: String, required: true },\n  category: { type: String, required: true },\n  febricCategory: { type: String, required: true },\n  price: { type: Number, required: true },\n  size: { type: String, required: true },\n  image1: { type: String, required: true }, // make false if optional\n  image2: { type: String },\n  description: { type: String }\n});\n\n// âœ… Always use the same name (\"Product\") to avoid OverwriteModelError\nconst Product = mongoose.models.Product || mongoose.model('Products', ProductSchema);\n\nexport default Product;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,gBAAgB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACxC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,gBAAgB;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC/C,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,QAAQ;QAAE,MAAM;QAAQ,UAAU;IAAK;IACvC,QAAQ;QAAE,MAAM;IAAO;IACvB,aAAa;QAAE,MAAM;IAAO;AAC9B;AAEA,sEAAsE;AACtE,MAAM,UAAU,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,YAAY;uCAEvD"}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file://D%3A/New%20folder/app/api/products/%5Bid%5D/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport connect from \"@/lib/mongodb\";\r\nimport Product from \"@/app/models/Products\";\r\n\r\nexport async function GET(req, { params }) {\r\n  try {\r\n    await connect();\r\n\r\n    const { id } = params; // get id from dynamic route\r\n\r\n    const product = await Product.findById(id);\r\n\r\n    if (!product) {\r\n      return NextResponse.json({data:[],success:false}, { status: 404 });\r\n    }\r\n\r\n    return NextResponse.json({data:product,success:true}, { status: 200 });\r\n  } catch (error) {\r\n    console.error(\"Error fetching product:\", error);\r\n    return NextResponse.json({ error: \"Something went wrong\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,IAAI,GAAG,EAAE,EAAE,MAAM,EAAE;IACvC,IAAI;QACF,MAAM,CAAA,GAAA,gHAAA,CAAA,UAAO,AAAD;QAEZ,MAAM,EAAE,EAAE,EAAE,GAAG,QAAQ,4BAA4B;QAEnD,MAAM,UAAU,MAAM,2HAAA,CAAA,UAAO,CAAC,QAAQ,CAAC;QAEvC,IAAI,CAAC,SAAS;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAC,MAAK,EAAE;gBAAC,SAAQ;YAAK,GAAG;gBAAE,QAAQ;YAAI;QAClE;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC,MAAK;YAAQ,SAAQ;QAAI,GAAG;YAAE,QAAQ;QAAI;IACtE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC5E;AACF"}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}