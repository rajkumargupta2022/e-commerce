{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://D%3A/New%20folder/lib/mongodb.js"],"sourcesContent":["// lib/mongoose.js\n\nimport mongoose from 'mongoose';\n\nconst MONGODB_URI = \"mongodb://localhost:27017/lebel\"; // hardcoded for local DB\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI');\n}\n\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connect() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  if (!cached.promise) {\n    const opts = {\n      bufferCommands: false,\n    };\n\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\n      return mongoose;\n    });\n  }\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n\nexport default connect;\n"],"names":[],"mappings":"AAAA,kBAAkB;;;;AAElB;;AAEA,MAAM,cAAc,mCAAmC,yBAAyB;AAEhF,uCAAkB;;AAElB;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,MAAM,IAAI,CAAC,CAAC;YACzD,OAAO;QACT;IACF;IACA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file://D%3A/New%20folder/app/api/products-by-category/route.js"],"sourcesContent":["// app/api/products/byCategory/route.js\r\nimport { NextResponse } from \"next/server\";\r\nimport Product from \"@/app/models/Product\"; // your Product model\r\nimport connect from \"@/lib/mongodb\"\r\n\r\nexport async function GET(req) {\r\n  try {\r\n    await connect();\r\n\r\n    // get category from query string\r\n    const { searchParams } = new URL(req.url);\r\n    const category = searchParams.get(\"category\");\r\n\r\n    if (!category) {\r\n      return NextResponse.json(\r\n        { error: \"Category is required\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // find products by category\r\n    const products = await Product.find({ category });\r\n\r\n    return NextResponse.json({ products, success: true }, { status: 200 });\r\n  } catch (error) {\r\n    console.error(\"Error fetching products:\", error);\r\n    return NextResponse.json({ error: \"Failed to fetch products\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,uCAAuC;;;;AACvC;;;;;;AAEA;;;;AAEO,eAAe,IAAI,GAAG;IAC3B,IAAI;QACF,MAAM,CAAA,GAAA,gHAAA,CAAA,UAAO,AAAD;QAEZ,iCAAiC;QACjC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;QACxC,MAAM,WAAW,aAAa,GAAG,CAAC;QAElC,IAAI,CAAC,UAAU;YACb,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAuB,GAChC;gBAAE,QAAQ;YAAI;QAElB;QAEA,4BAA4B;QAC5B,MAAM,WAAW,MAAM,QAAQ,IAAI,CAAC;YAAE;QAAS;QAE/C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;YAAU,SAAS;QAAK,GAAG;YAAE,QAAQ;QAAI;IACtE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA2B,GAAG;YAAE,QAAQ;QAAI;IAChF;AACF"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}